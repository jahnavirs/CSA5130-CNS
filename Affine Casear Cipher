from math import gcd

def mod_inverse(a, m):
    for x in range(1, m):
        if (a * x) % m == 1:
            return x
    return None

def affine_encrypt(text, a, b):
    if gcd(a, 26) != 1:
        raise ValueError("a must be coprime with 26")
    return ''.join(chr(((a * (ord(c.upper()) - 65) + b) % 26) + 65) if c.isalpha() else c for c in text)

def affine_decrypt(cipher, a, b):
    a_inv = mod_inverse(a, 26)
    return ''.join(chr(((a_inv * ((ord(c.upper()) - 65 - b)) % 26) + 65) if c.isalpha() else c) for c in cipher)

# Example
a, b = 5, 8
plain = "HELLO"
cipher = affine_encrypt(plain, a, b)
decrypted = affine_decrypt(cipher, a, b)

print("Plaintext:", plain)
print("Encrypted:", cipher)
print("Decrypted:", decrypted)
